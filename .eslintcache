[{"/Users/2c4school/Development/onebody/spurwing_widget/src/index.tsx":"1","/Users/2c4school/Development/onebody/spurwing_widget/src/reportWebVitals.ts":"2","/Users/2c4school/Development/onebody/spurwing_widget/src/App.tsx":"3","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_BuildingIcon.tsx":"4","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_HandsetIcon.tsx":"5","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_CheckMarkIcon.tsx":"6","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_NewTeleheathIcon.tsx":"7","/Users/2c4school/Development/onebody/spurwing_widget/src/WidgetStateHolder.tsx":"8","/Users/2c4school/Development/onebody/spurwing_widget/src/AppointmentTypes.tsx":"9","/Users/2c4school/Development/onebody/spurwing_widget/src/_AppointmentTypeOption.tsx":"10","/Users/2c4school/Development/onebody/spurwing_widget/src/DateTimeSelector.tsx":"11","/Users/2c4school/Development/onebody/spurwing_widget/src/_DayPicker.tsx":"12","/Users/2c4school/Development/onebody/spurwing_widget/src/_AvailableSlots.tsx":"13","/Users/2c4school/Development/onebody/spurwing_widget/src/utils/dateUtils.ts":"14","/Users/2c4school/Development/onebody/spurwing_widget/src/ContactInfoForm.tsx":"15","/Users/2c4school/Development/onebody/spurwing_widget/src/_CompletedBookingInfo.tsx":"16","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_SuccessIcon.tsx":"17","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_ClockIcon.tsx":"18","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_CalendarSheetIcon.tsx":"19","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_LocationSpotIcon.tsx":"20","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_LocationOnMapIcon.tsx":"21","/Users/2c4school/Development/onebody/spurwing_widget/src/_EmbeddableHeader.tsx":"22"},{"size":500,"mtime":1609084472000,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1609083685000,"results":"25","hashOfConfig":"24"},{"size":222,"mtime":1609095029000,"results":"26","hashOfConfig":"24"},{"size":2302,"mtime":1609992890000,"results":"27","hashOfConfig":"24"},{"size":1629,"mtime":1609091334000,"results":"28","hashOfConfig":"24"},{"size":550,"mtime":1609091285000,"results":"29","hashOfConfig":"24"},{"size":2162,"mtime":1609091265000,"results":"30","hashOfConfig":"24"},{"size":2646,"mtime":1609996123000,"results":"31","hashOfConfig":"24"},{"size":1379,"mtime":1609095037000,"results":"32","hashOfConfig":"24"},{"size":3450,"mtime":1609095043000,"results":"33","hashOfConfig":"24"},{"size":1034,"mtime":1609826894000,"results":"34","hashOfConfig":"24"},{"size":1343,"mtime":1609994543000,"results":"35","hashOfConfig":"24"},{"size":4862,"mtime":1609826874000,"results":"36","hashOfConfig":"24"},{"size":137,"mtime":1609825894000,"results":"37","hashOfConfig":"24"},{"size":4220,"mtime":1609992209000,"results":"38","hashOfConfig":"24"},{"size":2270,"mtime":1609993938000,"results":"39","hashOfConfig":"24"},{"size":838,"mtime":1609992777000,"results":"40","hashOfConfig":"24"},{"size":1891,"mtime":1609993003000,"results":"41","hashOfConfig":"24"},{"size":5329,"mtime":1609992995000,"results":"42","hashOfConfig":"24"},{"size":2297,"mtime":1609992981000,"results":"43","hashOfConfig":"24"},{"size":3514,"mtime":1609992971000,"results":"44","hashOfConfig":"24"},{"size":1719,"mtime":1609996450000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"jqjnkr",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/2c4school/Development/onebody/spurwing_widget/src/index.tsx",[],["105","106"],"/Users/2c4school/Development/onebody/spurwing_widget/src/reportWebVitals.ts",[],"/Users/2c4school/Development/onebody/spurwing_widget/src/App.tsx",[],"/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_BuildingIcon.tsx",["107"],"import * as React from \"react\";\n\nexport default ({width = '14px', height = '14px', color = '#515151', opacity = '0.5'}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 10 10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g id=\"Calendar---Status-Indicators\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" opacity={opacity}>\n            <g id=\"D-&gt;-Calendar-&gt;-Provider-&gt;-Appointment-Status-Permutations\" transform=\"translate(-1352.000000, -778.000000)\" fill={color}>\n                <g id=\"Icon/User-Interface/Building\" transform=\"translate(1352.000000, 778.000000)\">\n                    <path d=\"M5.875,3.25 L6.3125,3.25 C6.55412458,3.25 6.75,3.05412458 6.75,2.8125 C6.75,2.57087542 6.55412458,2.375 6.3125,2.375 L5.875,2.375 C5.63337542,2.375 5.4375,2.57087542 5.4375,2.8125 C5.4375,3.05412458 5.63337542,3.25 5.875,3.25 Z M5.875,5 L6.3125,5 C6.55412458,5 6.75,4.80412458 6.75,4.5625 C6.75,4.32087542 6.55412458,4.125 6.3125,4.125 L5.875,4.125 C5.63337542,4.125 5.4375,4.32087542 5.4375,4.5625 C5.4375,4.80412458 5.63337542,5 5.875,5 Z M3.6875,3.25 L4.125,3.25 C4.36662458,3.25 4.5625,3.05412458 4.5625,2.8125 C4.5625,2.57087542 4.36662458,2.375 4.125,2.375 L3.6875,2.375 C3.44587542,2.375 3.25,2.57087542 3.25,2.8125 C3.25,3.05412458 3.44587542,3.25 3.6875,3.25 Z M3.6875,5 L4.125,5 C4.36662458,5 4.5625,4.80412458 4.5625,4.5625 C4.5625,4.32087542 4.36662458,4.125 4.125,4.125 L3.6875,4.125 C3.44587542,4.125 3.25,4.32087542 3.25,4.5625 C3.25,4.80412458 3.44587542,5 3.6875,5 Z M8.9375,8.5 L8.5,8.5 L8.5,1.0625 C8.5,0.820875422 8.30412458,0.625 8.0625,0.625 L1.9375,0.625 C1.69587542,0.625 1.5,0.820875422 1.5,1.0625 L1.5,8.5 L1.0625,8.5 C0.820875422,8.5 0.625,8.69587542 0.625,8.9375 C0.625,9.17912458 0.820875422,9.375 1.0625,9.375 L8.9375,9.375 C9.17912458,9.375 9.375,9.17912458 9.375,8.9375 C9.375,8.69587542 9.17912458,8.5 8.9375,8.5 Z M5.4375,8.5 L4.5625,8.5 L4.5625,6.75 L5.4375,6.75 L5.4375,8.5 Z M7.625,8.5 L6.3125,8.5 L6.3125,6.3125 C6.3125,6.07087542 6.11662458,5.875 5.875,5.875 L4.125,5.875 C3.88337542,5.875 3.6875,6.07087542 3.6875,6.3125 L3.6875,8.5 L2.375,8.5 L2.375,1.5 L7.625,1.5 L7.625,8.5 Z\" id=\"Shape\"></path>\n                </g>\n            </g>\n        </g>\n    </svg>\n  )\n};\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_HandsetIcon.tsx",["108"],"import * as React from \"react\";\n\nexport default ({width = '14px', height = '14px', color = '#515151', opacity = '0.5'}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 14 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <title>HandsetIcon</title>\n        <g id=\"Appointments---Web\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" opacity={opacity}>\n            <g id=\"Appoinment-Permutations\" transform=\"translate(-461.000000, -1421.000000)\" fill={color}>\n                <g id=\"Stacked-Group-3-Copy\" transform=\"translate(460.000000, 1420.000000)\">\n                    <g id=\"Icon/UI/Phone\">\n                        <g id=\"phone\" transform=\"translate(1.000000, 1.000000)\">\n                            <path d=\"M13.4914061,0.672937728 L10.6477162,0.0167015883 C10.3387383,-0.0543906602 10.0215575,0.106934058 9.89577893,0.396771686 L8.58330665,3.459207 C8.46846532,3.7271701 8.5450262,4.04161658 8.77197454,4.22481583 L10.4289708,5.58103719 C9.44461658,7.67825852 7.72473103,9.42275293 5.58376062,10.4262474 L4.22753927,8.7692511 C4.0416057,8.54230277 3.72989353,8.46574189 3.46193044,8.58058321 L0.399495119,9.89305549 C0.106923174,10.0215684 -0.0544015441,10.3387492 0.0166907044,10.6477271 L0.672926844,13.491417 C0.741284775,13.7867233 1.00377923,14 1.31275708,14 C8.31534356,14 13.9999891,8.32629171 13.9999891,1.31276796 C13.9999891,1.00652443 13.7894467,0.741295659 13.4914061,0.672937728 Z\" id=\"Path\"></path>\n                        </g>\n                    </g>\n                </g>\n            </g>\n        </g>\n    </svg>\n  )\n};\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_CheckMarkIcon.tsx",["109"],"import * as React from \"react\";\n\nexport default ({width = \"27px\", height = \"25px\", color = \"currentColor\"}) => {\n  return(\n    <svg width={width} height={height} viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g id=\"org-member-icon-copy-6\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <polyline\n          id=\"Path-11\"\n          stroke={color}\n          strokeWidth=\"12\"\n          fillRule=\"nonzero\"\n          points=\"11 50 35.2434725 75 87 25\">\n        </polyline>\n      </g>\n    </svg>\n  );\n}\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_NewTeleheathIcon.tsx",["110"],"import * as React from 'react';\n\nexport default ({width = '16px', height = '9px', color = \"#FFFFFF\"}) => (\n  <svg width={width} height={height} viewBox=\"0 0 16 9\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n      <title>NewTelehealthIcon</title>\n      <g id=\"Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"Main-Navigation-Icons\" transform=\"translate(-1138.000000, -522.000000)\">\n              <g id=\"Group-Copy-6\" transform=\"translate(319.000000, 519.000000)\">\n                  <g id=\"Icon/Large/Telehealth\" transform=\"translate(819.000000, -0.000000)\">\n                      <rect id=\"Container\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect>\n                      <path d=\"M14.8214723,4.19157985 C14.6000063,4.06371639 14.3271489,4.06371639 14.1056829,4.19157985 L11.5789463,5.43705341 C11.5365643,4.28195207 10.5874564,3.36764478 9.43157808,3.36842155 L2.98947347,3.36842155 C1.80351476,3.36842155 0.842105263,4.32983154 0.842105263,5.51579025 L0.842105263,9.81052666 C0.842105263,10.9964854 1.80351476,11.9578954 2.98947347,11.9578954 L9.43157808,11.9578954 C10.5874564,11.9586721 11.5365643,11.0443648 11.5789463,9.88926349 L14.1271566,11.1633686 C14.2247232,11.213389 14.3324767,11.2403274 14.4421039,11.2421055 C14.5761177,11.2425355 14.7075607,11.2053347 14.8214723,11.1347371 C15.0311882,11.003665 15.1583882,10.7736224 15.1578947,10.5263161 L15.1578947,4.80000085 C15.1583882,4.55269456 15.0311882,4.32265196 14.8214723,4.19157985 Z M10.1473675,9.81052666 C10.1473675,10.2058462 9.82689765,10.5263161 9.43157808,10.5263161 L2.98947347,10.5263161 C2.5941539,10.5263161 2.27368407,10.2058462 2.27368407,9.81052666 L2.27368407,5.51579025 C2.27368407,5.12047068 2.5941539,4.80000085 2.98947347,4.80000085 L9.43157808,4.80000085 C9.82689765,4.80000085 10.1473675,5.12047068 10.1473675,5.51579025 L10.1473675,9.81052666 Z M13.7263145,9.36673723 L11.5789463,8.29305313 L11.5789463,7.03326378 L13.7263145,5.95957968 L13.7263145,9.36673723 Z\" id=\"Shape\" fill={color} fill-rule=\"evenodd\"></path>\n                  </g>\n              </g>\n          </g>\n      </g>\n  </svg>\n);\n","/Users/2c4school/Development/onebody/spurwing_widget/src/WidgetStateHolder.tsx",["111","112"],"/Users/2c4school/Development/onebody/spurwing_widget/src/AppointmentTypes.tsx",[],"/Users/2c4school/Development/onebody/spurwing_widget/src/_AppointmentTypeOption.tsx",["113","114","115"],"import React, { useEffect, useState }  from 'react';\nimport axios from \"axios\";\n\nimport {\n  default as BuildingIcon\n} from \"./components/icons/_BuildingIcon\";\n\nimport {\n  default as NewTeleheathIcon\n} from \"./components/icons/_NewTeleheathIcon\";\n\nimport {\n  default as HandsetIcon\n} from \"./components/icons/_HandsetIcon\";\n\nimport {\n  default as CheckMarkIcon\n} from \"./components/icons/_CheckMarkIcon\";\n\n  function getContactIcon(contactType: string) {\n    switch(contactType) {\n      case \"Healthie Telehealth\":\n      case \"Healthie Video Call\":\n      case \"Secure Videochat\":\n        return <NewTeleheathIcon width=\"16px\" height=\"16px\" color=\"#4a90e2\"/>\n      case \"In Person\":\n        return <BuildingIcon width=\"16px\" height=\"16px\" color=\"#4a90e2\" opacity=\"1\"/>\n      case \"Phone Call\":\n        return <HandsetIcon width=\"16px\" height=\"16px\" color=\"#4a90e2\" opacity=\"1\"/>\n      case \"picked-contact\":\n        return <CheckMarkIcon width=\"16px\" height=\"16px\" color=\"#ffffff\"/>\n      default: return null\n    }\n  }\n\n  function getButtonText(contactType: string) {\n    switch(contactType) {\n      case 'Healthie Telehealth':\n      case 'Healthie Video Call':\n      case 'Secure Videochat':\n        return 'Video Call'\n      default: return contactType\n    }\n  }\n\n\nfunction formatAvailableTypes(types: Array<string>) {\n    const format = types.length >=3 ? ', or $1' : ' or $1';\n    return types.join(', ').replace(/, ([^,]*)$/, format);\n}\n\nfunction getContactTypeButtons(contactTypes: [string], selectedContactType: string, setContactType: (obj: any) => null) {\n\n    return (\n      <div className=\"embedded-appointment-contact-types\">\n        { contactTypes.map((item: string, idx: number) => {\n            const picked = item === selectedContactType;\n\n            return (\n              <div\n                key={idx}\n                onClick={() => setContactType(item)}\n                className={`embedded-appointment-contact${picked ? \" picked-contact\" : \"\" }`}>\n\n                {getContactIcon(picked ? \"picked-contact\" : item)}\n                <span>{getButtonText(item)}</span>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n\nfunction AppointmentTypeOption(props: any) {\n  \n  const appointmentType = props.appointmentType\n\n  if (!appointmentType) {\n    return null;\n  }\n  \n  const isActive = props.selectedAppointmentType === appointmentType\n\n  return (\n          <div key={appointmentType.id} className={`appointment-type-option ${isActive ? \"active\" : \"\"}`} onClick={() => props.setAppointmentType(appointmentType)}>\n            <div className=\"embedded-appointment-type-info-box\">\n              <div className=\"circle-indicator \"></div>\n              <div className=\"embedded-appointment-type-info\">\n                <div className=\"embedded-appointment-type-name\">\n                  {appointmentType.name}\n                </div>\n                <div className=\"embedded-appointment-type-length\">\n                  {appointmentType.length} Minutes\n                </div>\n              </div>\n            </div>\n            <div className=\"embedded-appointment-types\">\n            { isActive ?\n              getContactTypeButtons(appointmentType.available_contact_types, props.selectedContactType, props.setContactType)\n            :\n              formatAvailableTypes(appointmentType.available_contact_types)\n            }\n          </div>\n          </div>\n  );\n}\n\nexport default AppointmentTypeOption;\n","/Users/2c4school/Development/onebody/spurwing_widget/src/DateTimeSelector.tsx",["116","117"],"import React, { useEffect, useState }  from 'react';\nimport axios from \"axios\";\nimport DayPicker from './_DayPicker'\nimport AvailableSlots from './_AvailableSlots'\n\n\nfunction DateTimeSelector(props: any) {\n  const [selectedDay, setSelectedDay] = useState(new Date());\n\n  return (\n      <div className=\"embedded-scheduler-container\">\n        <div className=\"embedded-scheduler-container__title\">\n          Select Date and Time\n        </div>\n\n        <DayPicker \n          selectedDay={selectedDay}\n          setSelectedDay={setSelectedDay}\n          selectedAppointmentType={props.selectedAppointmentType}\n          providerId={props.providerId}\n          />\n\n        <AvailableSlots\n          selectedDay={selectedDay}\n          setSelectedSlot={props.setSelectedSlot}\n          selectedSlot={props.selectedSlot}\n          selectedAppointmentType={props.selectedAppointmentType}\n          providerId={props.providerId}\n          moveToNextStep={props.moveToNextStep}\n        />\n      </div>\n  );\n\n}\n\nexport default DateTimeSelector;\n","/Users/2c4school/Development/onebody/spurwing_widget/src/_DayPicker.tsx",["118","119"],"import React, { useEffect, useState }  from 'react';\nimport axios from \"axios\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { parse } from 'date-fns'\n\nfunction DayPicker(props: any) {\n const [data, setData]: [data: any, setData: any] = useState([]);\n\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3650/api/v2/booking/days_available.json\", {\n  params: {\n    org_level: false,\n    date_from_month: props.selectedDay,\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone || 'America/New_York',\n    appointment_type_id: props.selectedAppointmentType.id,\n    provider_id: props.providerId\n  }})\n      .then(result => setData(result.data));\n  }, [props.selectedDay && props.selectedDay.getMonth()]);\n\n  const highlightDates = data && data.days_available \n      ? data.days_available.map((day: string) => parse(day, \"yyyy-MM-dd\", new Date()))\n      : [];\n\n  return (\n      <div className=\"embeddable-book-cal-container\">\n          <DatePicker\n            inline\n            useWeekdaysShort={true}\n            onMonthChange={(e: any) => props.setSelectedDay(e)}\n            onChange={(e: any) => props.setSelectedDay(e)}\n            selected={props.selectedDay}\n            highlightDates={highlightDates}\n          />\n      </div>\n  );\n\n}\n\nexport default DayPicker;\n","/Users/2c4school/Development/onebody/spurwing_widget/src/_AvailableSlots.tsx",["120","121","122"],"import React, { useEffect, useState }  from 'react';\nimport axios from \"axios\";\nimport { format, parse } from 'date-fns'\nimport { toDate } from './utils/dateUtils'\n\nfunction categorizeSlots(availableSlotsForRange: Array<any>) {\n\n    if (availableSlotsForRange == null) {\n      return [[],[],[]];\n    }\n\n    const morningTimes = [];\n    const afternoonTimes = [];\n    const eveningTimes = [];\n    let i = 0;\n\n    while (i < availableSlotsForRange.length) {\n      const slot = availableSlotsForRange[i]\n      const dt = slot.date;\n\n      const date = toDate(dt)\n\n      if (format(date, \"a\") === \"AM\" && parseInt(format(date, \"H\"),10) < 12) {\n        morningTimes.push(slot);\n      } else if ((format(date, \"H\") === \"12\") || (format(date, \"H\") === \"17\") || (parseInt(format(date, \"H\"),10) < 17)) {\n        afternoonTimes.push(slot);\n      } else {\n        eveningTimes.push(slot);\n      }\n      i++\n    }\n\n    return [morningTimes,afternoonTimes,eveningTimes]\n  }\n\nfunction availableSlot(slot: any, index: number, props: any) {\n\treturn (\t\n\t<div \n\t\tkey={index} \n\t\tonClick={() => props.setSelectedSlot(slot)} className={`available-slot ${props.selectedSlot == slot ? \"active-slot\" : \"\"}`}>{format(toDate(slot.date), 'h:mm a')}\n\t</div> );\n} \n\nfunction AvailableSlots(props: any) {\n const [data, setData]: [data: any, setData: any] = useState([]);\n const timeArrays = categorizeSlots(data.slots_available);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3650/api/v2/booking/slots_available.json\", {\n  params: {\n    org_level: false,\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone || 'America/New_York',\n    appointment_type_id: props.selectedAppointmentType.id,\n    provider_id: props.providerId,\n    provider_ids: props.providerIds,\n    end_date: props.selectedDay.toString(),\n    start_date: props.selectedDay.toString(),\n    appointment_location_id: props.appointmentLocationId,\n    contact_type: props.appointmentContactType,\n  }})\n      .then(result => setData(result.data));\n  }, [props.selectedDay]);\n\n  return (\n      <div className=\"embeddable-availability-container\">\n      \t<div className=\"embeddable-availability-triangle\" />\n          <div className=\"availability-on-header\">\n            <span className=\"availability-on-header-date\">{format(props.selectedDay, \"MMMM d, yyyy\")}</span>\n            <p className=\"availability-on-header-timezone\"> Timezone: {Intl.DateTimeFormat().resolvedOptions().timeZone || 'America/New_York'}</p>\n          </div>\n\n          <div className=\"areas-of-day-flexbox\">\n\n            { !!timeArrays[0].length &&\n              <div className=\"day-area\">\n                <span className=\"day-area-header\">\n                  Morning\n                </span>\n                <div className=\"available-slots-for-day\">\n                  { timeArrays[0].map((slot, index) => availableSlot(slot, index, props) )\n                    \t\n                  }\n                </div>\n              </div>\n            }\n\n            { !!timeArrays[1].length &&\n              <div className=\"day-area\">\n                <span className=\"day-area-header\">\n                  Afternoon\n                </span>\n                <div className=\"available-slots-for-day\">\n                  { timeArrays[1].map((slot, index) => availableSlot(slot, index, props))}\n                </div>\n              </div>\n            }\n\n            { !!timeArrays[2].length &&\n              <div className=\"day-area\">\n                <span className=\"day-area-header\">\n                  Evening\n                </span>\n                <div className=\"available-slots-for-day\">\n                  { timeArrays[2].map((slot, index) => availableSlot(slot, index, props))\n                  }\n                </div>\n              </div>\n            }\n          </div>\n            \n           { (timeArrays[0].length === 0 &&\n              timeArrays[1].length === 0 &&\n              timeArrays[2].length === 0) ?\n                <div className=\"embeddable-empty-state\">\n                  <p className=\"embeddable-empty-state__title\">\n                    No available time slots\n                  </p>\n                  <p>\n                    Please select a different date in the calendar.\n                  </p>\n                  <p>\n                    You can change the month by pressing the arrow at the top right of the calendar.\n                  </p>\n                </div>\n          :\n            null\n          }\n\n          <div\n            className=\"available-slot-action\"\n          >\n            <button\n              className=\"sw-button primary-button large-button slot-confirm-button\"\n              disabled={!props.selectedSlot}\n            >\n              Confirm Date and Time\n            </button>         \n           </div>\n        </div>\n  );\n\n}\n\nexport default AvailableSlots;\n","/Users/2c4school/Development/onebody/spurwing_widget/src/utils/dateUtils.ts",[],"/Users/2c4school/Development/onebody/spurwing_widget/src/ContactInfoForm.tsx",["123","124","125"],"import React, { useEffect, useState }  from 'react';\nimport axios from \"axios\";\nimport { Form, Field } from 'react-final-form'\n\n\nfunction completeBooking(values: any, props: any) {\n  const slot = props.selectedSlot\n  axios.post('http://localhost:3650/api/v2/booking/complete_booking.json', {\n    ...values,\n    date: slot.date,\n    provider_id: slot.provider_id,\n    appointment_type_id: (props.selectedAppointmentType || {}).id,\n    contact_type: props.selectedContactType,\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone || 'America/New_York',\n  })\n  .then((response) => { \n    props.setBookedAppointment(response.data.appointment)\n  }, (error) => {\n    if (error.response && error.response.data && error.response.data.message) {\n      alert(error.response.data.message)\n    } else {\n      alert(error);\n    }\n  });\n}\n\nfunction ContactInfoForm(props: any) {\n  const [selectedDay, setSelectedDay] = useState(new Date());\n\n  return (\n      <div className=\"embedded-user-form contact-information\">\n        <Form\n    onSubmit={(values: any) => completeBooking(values, props)}\n    render={({ handleSubmit }) => (\n      <form className=\"contact-information-form\" onSubmit={handleSubmit}>\n        <div className=\"embedded-main-title\">\n            Contact Information\n        </div>\n\n        <div className=\"user-form-row\">\n          <Field\n            name=\"first_name\"\n            render={({ input, meta }) => (\n              <div className=\"field\">\n                <div>\n                  <label className=\"label\" htmlFor={input.name}>First Name</label>\n                </div>\n                <div className=\"control\">\n                  <input className=\"input\" placeholder={'Ex. Alice'} {...input} />\n                </div>\n                {meta.touched && meta.error && <span>{meta.error}</span>}\n              </div>\n            )}\n          />\n\n          <Field\n            name=\"last_name\"\n            render={({ input, meta }) => (\n              <div className=\"field\">\n                <div>\n                  <label className=\"label\" htmlFor={input.name}>Last Name</label>\n                </div>\n                <div className=\"control\">\n                  <input className=\"input\" placeholder={'Ex. Smith'} {...input} />\n                </div>\n                {meta.touched && meta.error && <span>{meta.error}</span>}\n              </div>\n            )}\n          />\n        </div>\n\n        <div className=\"user-form-row\">\n          <Field\n            name=\"email\"\n            render={({ input, meta }) => (\n              <div className=\"field\">\n                <div>\n                  <label className=\"label\" htmlFor={input.name}>Email</label>\n                </div>\n                <div className=\"control\">\n                  <input className=\"input\" placeholder={'Ex. alice.smith@example.com'} {...input} />\n                </div>\n                {meta.touched && meta.error && <span>{meta.error}</span>}\n              </div>\n            )}\n          />\n\n          <Field\n            name=\"phone_number\"\n            render={({ input, meta }) => (\n              <div className=\"field\">\n                <div>\n                  <label className=\"label\" htmlFor={input.name}>Phone Number</label>\n                </div>\n                <div className=\"control\">\n                  <input className=\"input\" placeholder={'Ex. 555-555-5555'} {...input} />\n                </div>\n                {meta.touched && meta.error && <span>{meta.error}</span>}\n              </div>\n            )}\n          />\n        </div>\n\n        { props.selectedContactType ? \n        <div className=\"field\">\n          <div>\n            <label className=\"label\">Contact Type</label>\n          </div>\n          <div className=\"control\">\n            {props.selectedContactType}\n          </div>\n        </div> : null }\n\n        <div style={{margin: \"20px 0px\"}}>\n          <div className=\"has-text-centered\">\n              <button className=\"sw-button primary-button is-relative continue-button has-validation-errors\" \n                value=\"Continue\">\n                  Confirm Appointment\n              </button>\n          </div>\n        </div>\n\n      </form>\n    )}\n  />\n      </div>\n  );\n\n}\n\nexport default ContactInfoForm;\n","/Users/2c4school/Development/onebody/spurwing_widget/src/_CompletedBookingInfo.tsx",[],"/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_SuccessIcon.tsx",["126"],"import * as React from \"react\";\n\nexport default ({width = \"14px\", height = \"11px\", color = \"#4A90E2\"}) => (\n  <svg width={width} height={height} viewBox=\"0 0 14 11\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n      <g id=\"Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"UI-Icons\" transform=\"translate(-1013.000000, -1853.000000)\" fill={color}>\n              <g id=\"Group-Copy-56\" transform=\"translate(289.000000, 1851.000000)\">\n                  <g id=\"Icon/UI/Pencil-Copy-2\" transform=\"translate(723.000000, 0.000000)\">\n                      <polygon id=\"Path\" points=\"15 3.6581741 13.355 2 5.66666667 9.69532909 2.645 6.68259023 1 8.32908705 5.66666667 13\"></polygon>\n                  </g>\n              </g>\n          </g>\n      </g>\n  </svg>\n);\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_ClockIcon.tsx",["127"],"import * as React from 'react';\n\nexport default ({width = '14px', height = '14px', color = '#4A90E2', opacity = '0.2'}) => (\n  <svg width={width} height={height} viewBox=\"0 0 14 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n      <g id=\"Calendar---Add-Appointment/Availability\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"D-&gt;-Calendar-&gt;-Provider-&gt;-Blocked-Availability\" transform=\"translate(-26.000000, -114.000000)\">\n              <g id=\"Group-2\" transform=\"translate(25.000000, 88.000000)\">\n                <g transform=\"translate(1.000000, 26.000000)\">\n                    <path d=\"M7,-3.10862447e-16 C3.13400675,-3.10862447e-16 6.21724894e-16,3.13400675 6.21724894e-16,7 C6.21724894e-16,10.8659932 3.13400675,14 7,14 C10.8659932,14 14,10.8659932 14,7 C14,5.14348457 13.2625021,3.36300718 11.9497475,2.05025253 C10.6369928,0.737497883 8.85651543,-3.10862447e-16 7,-3.10862447e-16 Z M7,12.6 C3.9072054,12.6 1.4,10.0927946 1.4,7 C1.4,3.9072054 3.9072054,1.4 7,1.4 C10.0927946,1.4 12.6,3.9072054 12.6,7 C12.6,8.48521234 12.0100017,9.90959426 10.959798,10.959798 C9.90959426,12.0100017 8.48521234,12.6 7,12.6 Z M9.17,7.441 L7.7,6.594 L7.7,3.5 C7.7,3.11340068 7.38659932,2.8 7,2.8 C6.61340068,2.8 6.3,3.11340068 6.3,3.5 L6.3,7 C6.3,7 6.3,7.056 6.3,7.084 C6.30414481,7.13223142 6.31596005,7.17949237 6.335,7.224 C6.34941575,7.26553139 6.36818699,7.30542026 6.391,7.343 C6.41015495,7.38278769 6.43362952,7.42034701 6.461,7.455 L6.573,7.546 L6.636,7.609 L8.456,8.659 C8.56268204,8.71946631 8.68337653,8.75084688 8.806,8.75001729 C9.12477505,8.75222874 9.40479483,8.53879546 9.48713825,8.23083108 C9.56948167,7.9228667 9.43334886,7.59816268 9.156,7.441 L9.17,7.441 Z\" id=\"Shape\" fill={color} fill-opacity={opacity}></path>\n                </g>\n              </g>\n          </g>\n      </g>\n  </svg>\n);\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_CalendarSheetIcon.tsx",["128"],"\nimport * as React from \"react\";\n\nexport default ({width = '22px', height = '24px', color = '#999999', opacity = '0'}) => (\n    <svg width={width} height={height} viewBox=\"0 0 19 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g id=\"Client-Communication\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <g id=\"D-&gt;-Client-Profile-&gt;-Client-Communication-History-&gt;-Permutations\" transform=\"translate(-15.000000, -439.000000)\">\n                <g id=\"Stacked-Group\" transform=\"translate(14.000000, 20.000000)\">\n                    <g id=\"Icons\" transform=\"translate(0.000000, 388.000000)\">\n                        <g id=\"Icon/Dual/Calendar\" transform=\"translate(0.000000, 31.000000)\">\n                            <rect id=\"Container\" x=\"0\" y=\"0\" width=\"21\" height=\"21\"></rect>\n                            <g transform=\"translate(1.657895, 0.552632)\">\n                                <path d=\"M15.9157895,7.07368421 L1.76842105,7.07368421 L1.76842105,4.42105263 C1.76842105,3.93271664 2.16429559,3.53684211 2.65263158,3.53684211 L3.53684211,3.53684211 L3.53684211,4.42105263 C3.53684211,4.90938862 3.93271664,5.30526316 4.42105263,5.30526316 C4.90938862,5.30526316 5.30526316,4.90938862 5.30526316,4.42105263 L5.30526316,3.53684211 L12.3789474,3.53684211 L12.3789474,4.42105263 C12.3789474,4.90938862 12.7748219,5.30526316 13.2631579,5.30526316 C13.7514939,5.30526316 14.1473684,4.90938862 14.1473684,4.42105263 L14.1473684,3.53684211 L15.0315789,3.53684211 C15.5199149,3.53684211 15.9157895,3.93271664 15.9157895,4.42105263 L15.9157895,7.07368421 Z\" id=\"Path\" fill={color} opacity={opacity}></path>\n                                <path d=\"M8.84210526,15.9157895 C9.33044125,15.9157895 9.72631579,15.5199149 9.72631579,15.0315789 C9.72631579,14.543243 9.33044125,14.1473684 8.84210526,14.1473684 C8.35376927,14.1473684 7.95789474,14.543243 7.95789474,15.0315789 C7.95789474,15.5199149 8.35376927,15.9157895 8.84210526,15.9157895 Z M13.2631579,15.9157895 C13.7514939,15.9157895 14.1473684,15.5199149 14.1473684,15.0315789 C14.1473684,14.543243 13.7514939,14.1473684 13.2631579,14.1473684 C12.7748219,14.1473684 12.3789474,14.543243 12.3789474,15.0315789 C12.3789474,15.5199149 12.7748219,15.9157895 13.2631579,15.9157895 Z M13.2631579,12.3789474 C13.7514939,12.3789474 14.1473684,11.9830728 14.1473684,11.4947368 C14.1473684,11.0064009 13.7514939,10.6105263 13.2631579,10.6105263 C12.7748219,10.6105263 12.3789474,11.0064009 12.3789474,11.4947368 C12.3789474,11.9830728 12.7748219,12.3789474 13.2631579,12.3789474 Z M8.84210526,12.3789474 C9.33044125,12.3789474 9.72631579,11.9830728 9.72631579,11.4947368 C9.72631579,11.0064009 9.33044125,10.6105263 8.84210526,10.6105263 C8.35376927,10.6105263 7.95789474,11.0064009 7.95789474,11.4947368 C7.95789474,11.9830728 8.35376927,12.3789474 8.84210526,12.3789474 Z M15.0315789,1.76842105 L14.1473684,1.76842105 L14.1473684,0.884210526 C14.1473684,0.395874537 13.7514939,1.17800506e-14 13.2631579,1.17800506e-14 C12.7748219,1.17800506e-14 12.3789474,0.395874537 12.3789474,0.884210526 L12.3789474,1.76842105 L5.30526316,1.76842105 L5.30526316,0.884210526 C5.30526316,0.395874537 4.90938862,1.17800506e-14 4.42105263,1.17800506e-14 C3.93271664,1.17800506e-14 3.53684211,0.395874537 3.53684211,0.884210526 L3.53684211,1.76842105 L2.65263158,1.76842105 C1.18762361,1.76842105 0,2.95604466 0,4.42105263 L0,16.8 C0,18.265008 1.18762361,19.4526316 2.65263158,19.4526316 L15.0315789,19.4526316 C16.4965869,19.4526316 17.6842105,18.265008 17.6842105,16.8 L17.6842105,4.42105263 C17.6842105,2.95604466 16.4965869,1.76842105 15.0315789,1.76842105 Z M15.9157895,16.8 C15.9157895,17.288336 15.5199149,17.6842105 15.0315789,17.6842105 L2.65263158,17.6842105 C2.16429559,17.6842105 1.76842105,17.288336 1.76842105,16.8 L1.76842105,8.84210526 L15.9157895,8.84210526 L15.9157895,16.8 Z M15.9157895,7.07368421 L1.76842105,7.07368421 L1.76842105,4.42105263 C1.76842105,3.93271664 2.16429559,3.53684211 2.65263158,3.53684211 L3.53684211,3.53684211 L3.53684211,4.42105263 C3.53684211,4.90938862 3.93271664,5.30526316 4.42105263,5.30526316 C4.90938862,5.30526316 5.30526316,4.90938862 5.30526316,4.42105263 L5.30526316,3.53684211 L12.3789474,3.53684211 L12.3789474,4.42105263 C12.3789474,4.90938862 12.7748219,5.30526316 13.2631579,5.30526316 C13.7514939,5.30526316 14.1473684,4.90938862 14.1473684,4.42105263 L14.1473684,3.53684211 L15.0315789,3.53684211 C15.5199149,3.53684211 15.9157895,3.93271664 15.9157895,4.42105263 L15.9157895,7.07368421 Z M4.42105263,12.3789474 C4.90938862,12.3789474 5.30526316,11.9830728 5.30526316,11.4947368 C5.30526316,11.0064009 4.90938862,10.6105263 4.42105263,10.6105263 C3.93271664,10.6105263 3.53684211,11.0064009 3.53684211,11.4947368 C3.53684211,11.9830728 3.93271664,12.3789474 4.42105263,12.3789474 Z M4.42105263,15.9157895 C4.90938862,15.9157895 5.30526316,15.5199149 5.30526316,15.0315789 C5.30526316,14.543243 4.90938862,14.1473684 4.42105263,14.1473684 C3.93271664,14.1473684 3.53684211,14.543243 3.53684211,15.0315789 C3.53684211,15.5199149 3.93271664,15.9157895 4.42105263,15.9157895 Z\" id=\"Shape\" fill={color}></path>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </g>\n        </g>\n    </svg>\n);\n\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_LocationSpotIcon.tsx",["129"],"\nimport * as React from \"react\";\n\nexport default ({width = '19px', height = '24px', color = '#999999'}) => (\n  <svg width={width} height={height} viewBox=\"0 0 19 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Book-Appointment---Web\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"D-&gt;-Client-&gt;-Booking-&gt;-Confirmation\" transform=\"translate(-429.000000, -497.000000)\" fill={color}>\n            <g id=\"Stacked-Group\" transform=\"translate(428.000000, 61.000000)\">\n                <g id=\"Group-4\" transform=\"translate(0.000000, 240.000000)\">\n                    <g id=\"Stacked-Group-2\" transform=\"translate(0.000000, 34.000000)\">\n                        <g id=\"Stacked-Group-5\" transform=\"translate(1.000000, 162.000000)\">\n                            <path d=\"M9.5,10.5482363 C10.8116763,10.5482363 11.875,9.47277917 11.875,8.14613561 C11.875,6.81949204 10.8116763,5.74403494 9.5,5.74403494 C8.18832372,5.74403494 7.125,6.81949204 7.125,8.14613561 C7.125,9.47277917 8.18832372,10.5482363 9.5,10.5482363 Z M8.656875,18.8474941 C8.87984784,19.0748681 9.18336793,19.2027627 9.5,19.2027627 C9.81663207,19.2027627 10.1201522,19.0748681 10.343125,18.8474941 L15.2,13.9231877 C17.5069115,11.5911718 18.1975309,8.08316982 16.9497593,5.03528258 C15.7019878,1.98739534 12.7616132,0 9.5,0 C6.2383868,0 3.2980122,1.98739534 2.05024067,5.03528258 C0.802469138,8.08316982 1.49308848,11.5911718 3.8,13.9231877 L8.656875,18.8474941 Z M3.835625,7.59365245 C3.9999463,5.85936472 4.92933822,4.292703 6.365,3.32992377 C8.26820807,2.0660323 10.7317919,2.0660323 12.635,3.32992377 C14.0607964,4.28921391 14.9870228,5.84378659 15.1594667,7.56697325 C15.3319105,9.29015991 14.7324543,11.000916 13.525625,12.2297067 L9.5,16.3012674 L5.474375,12.2297067 C4.26596743,11.0126483 3.66401539,9.30971473 3.835625,7.59365245 L3.835625,7.59365245 Z M17.8125,21.5978993 L1.1875,21.5978993 C0.53166186,21.5978993 0,22.1356279 0,22.7989497 C0,23.4622714 0.53166186,24 1.1875,24 L17.8125,24 C18.4683381,24 19,23.4622714 19,22.7989497 C19,22.1356279 18.4683381,21.5978993 17.8125,21.5978993 Z\" id=\"Shape\"></path>\n                        </g>\n                    </g>\n                </g>\n            </g>\n        </g>\n    </g>\n  </svg>\n);\n\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_LocationOnMapIcon.tsx",["130"],"import * as React from \"react\";\n\nexport default ({width = '15px', height = '16px', color = '#D0D0D0'}) => (\n  <svg width={width} height={height} viewBox=\"0 0 15 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Calendar---Add-Appointment/Availability\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"D-&gt;-Calendar-&gt;-Provider-&gt;-Blocked-Availability\" transform=\"translate(-25.000000, -176.000000)\" fill={color}>\n            <g id=\"Group-2\" transform=\"translate(25.000000, 88.000000)\">\n                <path d=\"M13.9987345,94.552 C13.4126472,94.4478774 12.8180351,94.3969957 12.2224382,94.4 C11.880216,94.4 11.5461419,94.4 11.2120678,94.464 C10.7961675,93.9191032 10.2652971,93.4688362 9.65577155,93.144 C10.1793274,92.5826018 10.4699887,91.8491841 10.4705864,91.088 C10.4705864,89.3825447 9.06243899,88 7.32540118,88 C5.58836337,88 4.18021599,89.3825447 4.18021599,91.088 C4.18081369,91.8491841 4.47147499,92.5826018 4.99503081,93.144 C4.38912997,93.470525 3.85911598,93.9173412 3.43873451,94.456 C3.12095673,94.4 2.78688266,94.4 2.44466044,94.4 C1.84856071,94.4022726 1.25394439,94.4585107 0.668364142,94.568 C0.276362824,94.6383739 -0.00628317502,94.976797 0.000106175024,95.368 L0.000106175024,101.968 C-0.000177584981,102.205946 0.107331471,102.431715 0.293549327,102.584 C0.478587218,102.737186 0.723411355,102.801676 0.961697475,102.76 C1.44929134,102.655735 1.94580654,102.596808 2.44466044,102.584 C4.02303328,102.582303 5.56716477,103.035729 6.88540118,103.888 L6.88540118,103.888 L6.88540118,103.888 L6.9913271,103.928 L6.9913271,103.928 C7.09940792,103.974049 7.21574037,103.998524 7.33354933,104 C7.41131871,103.999045 7.48839795,103.985531 7.56169748,103.96 L7.61873451,103.96 L7.72466044,103.92 L7.72466044,103.92 L7.72466044,103.92 C9.0554433,103.045847 10.6212888,102.580735 12.2224382,102.584 C12.7202627,102.586275 13.2167674,102.634487 13.7054012,102.728 C13.9436873,102.769676 14.1885114,102.705186 14.3735493,102.552 C14.5597672,102.399715 14.6672762,102.173946 14.6668837,101.936 L14.6668837,95.336 C14.6654437,94.9508194 14.3846434,94.6213304 13.9987345,94.552 Z M7.33354933,89.6 C8.1253486,89.6571172 8.73805366,90.3045017 8.73805366,91.084 C8.73805366,91.8634983 8.1253486,92.5108828 7.33354933,92.568 L7.33354933,92.568 C6.54175005,92.5108828 5.92904499,91.8634983 5.92904499,91.084 C5.92904499,90.3045017 6.54175005,89.6571172 7.33354933,89.6 L7.33354933,89.6 Z M6.51873451,101.864 C5.24165462,101.28442 3.85157285,100.984162 2.44466044,100.984 C2.17577155,100.984 1.90688266,100.984 1.62984562,101.024 L1.62984562,96 C2.31311911,95.9249534 3.00347523,95.9384019 3.68317896,96.04 L3.77280859,96.04 C4.7437401,96.2151975 5.67416367,96.5621674 6.51873451,97.064 L6.51873451,101.864 Z M7.33354933,95.68 C6.97121889,95.4747846 6.59560191,95.2930632 6.20910488,95.136 L6.16021599,95.136 C5.8913271,95.032 5.62243822,94.928 5.34540118,94.848 C5.91113749,94.4058989 6.61054728,94.1610534 7.33354933,94.152 L7.33354933,94.152 C8.05463475,94.1564889 8.75384578,94.3956378 9.32169748,94.832 C8.62999223,95.0440236 7.96345978,95.3283181 7.33354933,95.68 L7.33354933,95.68 Z M13.037253,101.024 C11.3641564,100.85895 9.67650213,101.135112 8.14836414,101.824 L8.14836414,97.024 C8.99446405,96.5350385 9.92546681,96.204127 10.8942901,96.048 L11.057253,96.048 C11.7123473,95.9478411 12.3779225,95.931706 13.037253,96 L13.037253,101.024 Z\" id=\"Shape\"></path>\n            </g>\n        </g>\n    </g>\n  </svg>\n);\n","/Users/2c4school/Development/onebody/spurwing_widget/src/_EmbeddableHeader.tsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":15,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":20,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":17,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":17,"endColumn":3},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"142","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"143","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"142","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"142","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":22,"column":6,"nodeType":"146","endLine":22,"endColumn":57,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":22,"column":7,"nodeType":"149","endLine":22,"endColumn":56},{"ruleId":"138","severity":1,"message":"150","line":3,"column":18,"nodeType":"140","messageId":"141","endLine":3,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":40,"column":95,"nodeType":"153","messageId":"154","endLine":40,"endColumn":97},{"ruleId":"144","severity":1,"message":"155","line":63,"column":6,"nodeType":"146","endLine":63,"endColumn":25,"suggestions":"156"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"157","line":28,"column":10,"nodeType":"140","messageId":"141","endLine":28,"endColumn":21},{"ruleId":"138","severity":1,"message":"158","line":28,"column":23,"nodeType":"140","messageId":"141","endLine":28,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":15,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":15,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":4,"column":1,"nodeType":"137","endLine":22,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":4,"column":1,"nodeType":"137","endLine":20,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":13,"endColumn":3},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.providerId', 'props.selectedAppointmentType.id', and 'props.selectedDay'. Either include them or remove the dependency array.","ArrayExpression",["161"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'parse' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'props.appointmentContactType', 'props.appointmentLocationId', 'props.providerId', 'props.providerIds', and 'props.selectedAppointmentType.id'. Either include them or remove the dependency array.",["162"],"'selectedDay' is assigned a value but never used.","'setSelectedDay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [props.providerId, props.selectedAppointmentType.id, props.selectedDay]",{"range":"167","text":"168"},"Update the dependencies array to be: [props.appointmentContactType, props.appointmentLocationId, props.providerId, props.providerIds, props.selectedAppointmentType.id, props.selectedDay]",{"range":"169","text":"170"},[723,774],"[props.providerId, props.selectedAppointmentType.id, props.selectedDay]",[2008,2027],"[props.appointmentContactType, props.appointmentLocationId, props.providerId, props.providerIds, props.selectedAppointmentType.id, props.selectedDay]"]