[{"/Users/2c4school/Development/onebody/spurwing_widget/src/index.tsx":"1","/Users/2c4school/Development/onebody/spurwing_widget/src/reportWebVitals.ts":"2","/Users/2c4school/Development/onebody/spurwing_widget/src/App.tsx":"3","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_BuildingIcon.tsx":"4","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_HandsetIcon.tsx":"5","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_CheckMarkIcon.tsx":"6","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_NewTeleheathIcon.tsx":"7","/Users/2c4school/Development/onebody/spurwing_widget/src/WidgetStateHolder.tsx":"8","/Users/2c4school/Development/onebody/spurwing_widget/src/AppointmentTypes.tsx":"9","/Users/2c4school/Development/onebody/spurwing_widget/src/_AppointmentTypeOption.tsx":"10","/Users/2c4school/Development/onebody/spurwing_widget/src/DateTimeSelector.tsx":"11","/Users/2c4school/Development/onebody/spurwing_widget/src/_DayPicker.tsx":"12","/Users/2c4school/Development/onebody/spurwing_widget/src/_AvailableSlots.tsx":"13","/Users/2c4school/Development/onebody/spurwing_widget/src/utils/dateUtils.ts":"14"},{"size":500,"mtime":1609084472000,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609083685000,"results":"17","hashOfConfig":"16"},{"size":222,"mtime":1609095029000,"results":"18","hashOfConfig":"16"},{"size":2302,"mtime":1609091488000,"results":"19","hashOfConfig":"16"},{"size":1629,"mtime":1609091334000,"results":"20","hashOfConfig":"16"},{"size":550,"mtime":1609091285000,"results":"21","hashOfConfig":"16"},{"size":2162,"mtime":1609091265000,"results":"22","hashOfConfig":"16"},{"size":1314,"mtime":1609826856000,"results":"23","hashOfConfig":"16"},{"size":1379,"mtime":1609095037000,"results":"24","hashOfConfig":"16"},{"size":3450,"mtime":1609095043000,"results":"25","hashOfConfig":"16"},{"size":1034,"mtime":1609826894000,"results":"26","hashOfConfig":"16"},{"size":1302,"mtime":1609826097000,"results":"27","hashOfConfig":"16"},{"size":4862,"mtime":1609826874000,"results":"28","hashOfConfig":"16"},{"size":137,"mtime":1609825894000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"jqjnkr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/2c4school/Development/onebody/spurwing_widget/src/index.tsx",[],["66","67"],"/Users/2c4school/Development/onebody/spurwing_widget/src/reportWebVitals.ts",[],"/Users/2c4school/Development/onebody/spurwing_widget/src/App.tsx",[],"/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_BuildingIcon.tsx",["68"],"import * as React from \"react\";\n\nexport default ({width = '14px', height = '14px', color = '#515151', opacity = '0.5'}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 10 10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g id=\"Calendar---Status-Indicators\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" opacity={opacity}>\n            <g id=\"D-&gt;-Calendar-&gt;-Provider-&gt;-Appointment-Status-Permutations\" transform=\"translate(-1352.000000, -778.000000)\" fill={color}>\n                <g id=\"Icon/User-Interface/Building\" transform=\"translate(1352.000000, 778.000000)\">\n                    <path d=\"M5.875,3.25 L6.3125,3.25 C6.55412458,3.25 6.75,3.05412458 6.75,2.8125 C6.75,2.57087542 6.55412458,2.375 6.3125,2.375 L5.875,2.375 C5.63337542,2.375 5.4375,2.57087542 5.4375,2.8125 C5.4375,3.05412458 5.63337542,3.25 5.875,3.25 Z M5.875,5 L6.3125,5 C6.55412458,5 6.75,4.80412458 6.75,4.5625 C6.75,4.32087542 6.55412458,4.125 6.3125,4.125 L5.875,4.125 C5.63337542,4.125 5.4375,4.32087542 5.4375,4.5625 C5.4375,4.80412458 5.63337542,5 5.875,5 Z M3.6875,3.25 L4.125,3.25 C4.36662458,3.25 4.5625,3.05412458 4.5625,2.8125 C4.5625,2.57087542 4.36662458,2.375 4.125,2.375 L3.6875,2.375 C3.44587542,2.375 3.25,2.57087542 3.25,2.8125 C3.25,3.05412458 3.44587542,3.25 3.6875,3.25 Z M3.6875,5 L4.125,5 C4.36662458,5 4.5625,4.80412458 4.5625,4.5625 C4.5625,4.32087542 4.36662458,4.125 4.125,4.125 L3.6875,4.125 C3.44587542,4.125 3.25,4.32087542 3.25,4.5625 C3.25,4.80412458 3.44587542,5 3.6875,5 Z M8.9375,8.5 L8.5,8.5 L8.5,1.0625 C8.5,0.820875422 8.30412458,0.625 8.0625,0.625 L1.9375,0.625 C1.69587542,0.625 1.5,0.820875422 1.5,1.0625 L1.5,8.5 L1.0625,8.5 C0.820875422,8.5 0.625,8.69587542 0.625,8.9375 C0.625,9.17912458 0.820875422,9.375 1.0625,9.375 L8.9375,9.375 C9.17912458,9.375 9.375,9.17912458 9.375,8.9375 C9.375,8.69587542 9.17912458,8.5 8.9375,8.5 Z M5.4375,8.5 L4.5625,8.5 L4.5625,6.75 L5.4375,6.75 L5.4375,8.5 Z M7.625,8.5 L6.3125,8.5 L6.3125,6.3125 C6.3125,6.07087542 6.11662458,5.875 5.875,5.875 L4.125,5.875 C3.88337542,5.875 3.6875,6.07087542 3.6875,6.3125 L3.6875,8.5 L2.375,8.5 L2.375,1.5 L7.625,1.5 L7.625,8.5 Z\" id=\"Shape\"></path>\n                </g>\n            </g>\n        </g>\n    </svg>\n  )\n};\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_HandsetIcon.tsx",["69"],"import * as React from \"react\";\n\nexport default ({width = '14px', height = '14px', color = '#515151', opacity = '0.5'}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 14 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <title>HandsetIcon</title>\n        <g id=\"Appointments---Web\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" opacity={opacity}>\n            <g id=\"Appoinment-Permutations\" transform=\"translate(-461.000000, -1421.000000)\" fill={color}>\n                <g id=\"Stacked-Group-3-Copy\" transform=\"translate(460.000000, 1420.000000)\">\n                    <g id=\"Icon/UI/Phone\">\n                        <g id=\"phone\" transform=\"translate(1.000000, 1.000000)\">\n                            <path d=\"M13.4914061,0.672937728 L10.6477162,0.0167015883 C10.3387383,-0.0543906602 10.0215575,0.106934058 9.89577893,0.396771686 L8.58330665,3.459207 C8.46846532,3.7271701 8.5450262,4.04161658 8.77197454,4.22481583 L10.4289708,5.58103719 C9.44461658,7.67825852 7.72473103,9.42275293 5.58376062,10.4262474 L4.22753927,8.7692511 C4.0416057,8.54230277 3.72989353,8.46574189 3.46193044,8.58058321 L0.399495119,9.89305549 C0.106923174,10.0215684 -0.0544015441,10.3387492 0.0166907044,10.6477271 L0.672926844,13.491417 C0.741284775,13.7867233 1.00377923,14 1.31275708,14 C8.31534356,14 13.9999891,8.32629171 13.9999891,1.31276796 C13.9999891,1.00652443 13.7894467,0.741295659 13.4914061,0.672937728 Z\" id=\"Path\"></path>\n                        </g>\n                    </g>\n                </g>\n            </g>\n        </g>\n    </svg>\n  )\n};\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_CheckMarkIcon.tsx",["70"],"import * as React from \"react\";\n\nexport default ({width = \"27px\", height = \"25px\", color = \"currentColor\"}) => {\n  return(\n    <svg width={width} height={height} viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g id=\"org-member-icon-copy-6\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <polyline\n          id=\"Path-11\"\n          stroke={color}\n          strokeWidth=\"12\"\n          fillRule=\"nonzero\"\n          points=\"11 50 35.2434725 75 87 25\">\n        </polyline>\n      </g>\n    </svg>\n  );\n}\n","/Users/2c4school/Development/onebody/spurwing_widget/src/components/icons/_NewTeleheathIcon.tsx",["71"],"import * as React from 'react';\n\nexport default ({width = '16px', height = '9px', color = \"#FFFFFF\"}) => (\n  <svg width={width} height={height} viewBox=\"0 0 16 9\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n      <title>NewTelehealthIcon</title>\n      <g id=\"Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"Main-Navigation-Icons\" transform=\"translate(-1138.000000, -522.000000)\">\n              <g id=\"Group-Copy-6\" transform=\"translate(319.000000, 519.000000)\">\n                  <g id=\"Icon/Large/Telehealth\" transform=\"translate(819.000000, -0.000000)\">\n                      <rect id=\"Container\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect>\n                      <path d=\"M14.8214723,4.19157985 C14.6000063,4.06371639 14.3271489,4.06371639 14.1056829,4.19157985 L11.5789463,5.43705341 C11.5365643,4.28195207 10.5874564,3.36764478 9.43157808,3.36842155 L2.98947347,3.36842155 C1.80351476,3.36842155 0.842105263,4.32983154 0.842105263,5.51579025 L0.842105263,9.81052666 C0.842105263,10.9964854 1.80351476,11.9578954 2.98947347,11.9578954 L9.43157808,11.9578954 C10.5874564,11.9586721 11.5365643,11.0443648 11.5789463,9.88926349 L14.1271566,11.1633686 C14.2247232,11.213389 14.3324767,11.2403274 14.4421039,11.2421055 C14.5761177,11.2425355 14.7075607,11.2053347 14.8214723,11.1347371 C15.0311882,11.003665 15.1583882,10.7736224 15.1578947,10.5263161 L15.1578947,4.80000085 C15.1583882,4.55269456 15.0311882,4.32265196 14.8214723,4.19157985 Z M10.1473675,9.81052666 C10.1473675,10.2058462 9.82689765,10.5263161 9.43157808,10.5263161 L2.98947347,10.5263161 C2.5941539,10.5263161 2.27368407,10.2058462 2.27368407,9.81052666 L2.27368407,5.51579025 C2.27368407,5.12047068 2.5941539,4.80000085 2.98947347,4.80000085 L9.43157808,4.80000085 C9.82689765,4.80000085 10.1473675,5.12047068 10.1473675,5.51579025 L10.1473675,9.81052666 Z M13.7263145,9.36673723 L11.5789463,8.29305313 L11.5789463,7.03326378 L13.7263145,5.95957968 L13.7263145,9.36673723 Z\" id=\"Shape\" fill={color} fill-rule=\"evenodd\"></path>\n                  </g>\n              </g>\n          </g>\n      </g>\n  </svg>\n);\n","/Users/2c4school/Development/onebody/spurwing_widget/src/WidgetStateHolder.tsx",["72","73"],"/Users/2c4school/Development/onebody/spurwing_widget/src/AppointmentTypes.tsx",[],"/Users/2c4school/Development/onebody/spurwing_widget/src/_AppointmentTypeOption.tsx",["74","75","76"],"import React, { useEffect, useState }  from 'react';\nimport axios from \"axios\";\n\nimport {\n  default as BuildingIcon\n} from \"./components/icons/_BuildingIcon\";\n\nimport {\n  default as NewTeleheathIcon\n} from \"./components/icons/_NewTeleheathIcon\";\n\nimport {\n  default as HandsetIcon\n} from \"./components/icons/_HandsetIcon\";\n\nimport {\n  default as CheckMarkIcon\n} from \"./components/icons/_CheckMarkIcon\";\n\n  function getContactIcon(contactType: string) {\n    switch(contactType) {\n      case \"Healthie Telehealth\":\n      case \"Healthie Video Call\":\n      case \"Secure Videochat\":\n        return <NewTeleheathIcon width=\"16px\" height=\"16px\" color=\"#4a90e2\"/>\n      case \"In Person\":\n        return <BuildingIcon width=\"16px\" height=\"16px\" color=\"#4a90e2\" opacity=\"1\"/>\n      case \"Phone Call\":\n        return <HandsetIcon width=\"16px\" height=\"16px\" color=\"#4a90e2\" opacity=\"1\"/>\n      case \"picked-contact\":\n        return <CheckMarkIcon width=\"16px\" height=\"16px\" color=\"#ffffff\"/>\n      default: return null\n    }\n  }\n\n  function getButtonText(contactType: string) {\n    switch(contactType) {\n      case 'Healthie Telehealth':\n      case 'Healthie Video Call':\n      case 'Secure Videochat':\n        return 'Video Call'\n      default: return contactType\n    }\n  }\n\n\nfunction formatAvailableTypes(types: Array<string>) {\n    const format = types.length >=3 ? ', or $1' : ' or $1';\n    return types.join(', ').replace(/, ([^,]*)$/, format);\n}\n\nfunction getContactTypeButtons(contactTypes: [string], selectedContactType: string, setContactType: (obj: any) => null) {\n\n    return (\n      <div className=\"embedded-appointment-contact-types\">\n        { contactTypes.map((item: string, idx: number) => {\n            const picked = item === selectedContactType;\n\n            return (\n              <div\n                key={idx}\n                onClick={() => setContactType(item)}\n                className={`embedded-appointment-contact${picked ? \" picked-contact\" : \"\" }`}>\n\n                {getContactIcon(picked ? \"picked-contact\" : item)}\n                <span>{getButtonText(item)}</span>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n\nfunction AppointmentTypeOption(props: any) {\n  \n  const appointmentType = props.appointmentType\n\n  if (!appointmentType) {\n    return null;\n  }\n  \n  const isActive = props.selectedAppointmentType === appointmentType\n\n  return (\n          <div key={appointmentType.id} className={`appointment-type-option ${isActive ? \"active\" : \"\"}`} onClick={() => props.setAppointmentType(appointmentType)}>\n            <div className=\"embedded-appointment-type-info-box\">\n              <div className=\"circle-indicator \"></div>\n              <div className=\"embedded-appointment-type-info\">\n                <div className=\"embedded-appointment-type-name\">\n                  {appointmentType.name}\n                </div>\n                <div className=\"embedded-appointment-type-length\">\n                  {appointmentType.length} Minutes\n                </div>\n              </div>\n            </div>\n            <div className=\"embedded-appointment-types\">\n            { isActive ?\n              getContactTypeButtons(appointmentType.available_contact_types, props.selectedContactType, props.setContactType)\n            :\n              formatAvailableTypes(appointmentType.available_contact_types)\n            }\n          </div>\n          </div>\n  );\n}\n\nexport default AppointmentTypeOption;\n","/Users/2c4school/Development/onebody/spurwing_widget/src/DateTimeSelector.tsx",["77","78"],"/Users/2c4school/Development/onebody/spurwing_widget/src/_DayPicker.tsx",["79","80"],"import React, { useEffect, useState }  from 'react';\nimport axios from \"axios\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { parse } from 'date-fns'\n\nfunction DayPicker(props: any) {\n const [data, setData]: [data: any, setData: any] = useState([]);\n\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3650/api/v2/booking/days_available.json\", {\n  params: {\n    org_level: false,\n    date_from_month: props.selectedDay,\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone || 'America/New_York',\n    appointment_type_id: props.selectedAppointmentType.id,\n    provider_id: props.providerId\n  }})\n      .then(result => setData(result.data));\n  }, [props.selectedDay && props.selectedDay.getMonth()]);\n\n  const highlightDates = data && data.days_available \n      ? data.days_available.map((day: string) => parse(day, \"yyyy-MM-dd\", new Date()))\n      : [];\n\n  return (\n      <div className=\"embeddable-book-cal-container\">\n          <DatePicker\n            inline\n            useWeekdaysShort={true}\n            onMonthChange={(e: any) => props.setSelectedDay(e)}\n            onChange={(e: any) => props.setSelectedDay(e)}\n            highlightDates={highlightDates}\n          />\n      </div>\n  );\n\n}\n\nexport default DayPicker;\n","/Users/2c4school/Development/onebody/spurwing_widget/src/_AvailableSlots.tsx",["81","82","83"],"import React, { useEffect, useState }  from 'react';\nimport axios from \"axios\";\nimport { format, parse } from 'date-fns'\nimport { toDate } from './utils/dateUtils'\n\nfunction categorizeSlots(availableSlotsForRange: Array<any>) {\n\n    if (availableSlotsForRange == null) {\n      return [[],[],[]];\n    }\n\n    const morningTimes = [];\n    const afternoonTimes = [];\n    const eveningTimes = [];\n    let i = 0;\n\n    while (i < availableSlotsForRange.length) {\n      const slot = availableSlotsForRange[i]\n      const dt = slot.date;\n\n      const date = toDate(dt)\n\n      if (format(date, \"a\") === \"AM\" && parseInt(format(date, \"H\"),10) < 12) {\n        morningTimes.push(slot);\n      } else if ((format(date, \"H\") === \"12\") || (format(date, \"H\") === \"17\") || (parseInt(format(date, \"H\"),10) < 17)) {\n        afternoonTimes.push(slot);\n      } else {\n        eveningTimes.push(slot);\n      }\n      i++\n    }\n\n    return [morningTimes,afternoonTimes,eveningTimes]\n  }\n\nfunction availableSlot(slot: any, index: number, props: any) {\n\treturn (\t\n\t<div \n\t\tkey={index} \n\t\tonClick={() => props.setSelectedSlot(slot)} className={`available-slot ${props.selectedSlot == slot ? \"active-slot\" : \"\"}`}>{format(toDate(slot.date), 'h:mm a')}\n\t</div> );\n} \n\nfunction AvailableSlots(props: any) {\n const [data, setData]: [data: any, setData: any] = useState([]);\n const timeArrays = categorizeSlots(data.slots_available);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3650/api/v2/booking/slots_available.json\", {\n  params: {\n    org_level: false,\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone || 'America/New_York',\n    appointment_type_id: props.selectedAppointmentType.id,\n    provider_id: props.providerId,\n    provider_ids: props.providerIds,\n    end_date: props.selectedDay.toString(),\n    start_date: props.selectedDay.toString(),\n    appointment_location_id: props.appointmentLocationId,\n    contact_type: props.appointmentContactType,\n  }})\n      .then(result => setData(result.data));\n  }, [props.selectedDay]);\n\n  return (\n      <div className=\"embeddable-availability-container\">\n      \t<div className=\"embeddable-availability-triangle\" />\n          <div className=\"availability-on-header\">\n            <span className=\"availability-on-header-date\">{format(props.selectedDay, \"MMMM d, yyyy\")}</span>\n            <p className=\"availability-on-header-timezone\"> Timezone: {Intl.DateTimeFormat().resolvedOptions().timeZone || 'America/New_York'}</p>\n          </div>\n\n          <div className=\"areas-of-day-flexbox\">\n\n            { !!timeArrays[0].length &&\n              <div className=\"day-area\">\n                <span className=\"day-area-header\">\n                  Morning\n                </span>\n                <div className=\"available-slots-for-day\">\n                  { timeArrays[0].map((slot, index) => availableSlot(slot, index, props) )\n                    \t\n                  }\n                </div>\n              </div>\n            }\n\n            { !!timeArrays[1].length &&\n              <div className=\"day-area\">\n                <span className=\"day-area-header\">\n                  Afternoon\n                </span>\n                <div className=\"available-slots-for-day\">\n                  { timeArrays[1].map((slot, index) => availableSlot(slot, index, props))}\n                </div>\n              </div>\n            }\n\n            { !!timeArrays[2].length &&\n              <div className=\"day-area\">\n                <span className=\"day-area-header\">\n                  Evening\n                </span>\n                <div className=\"available-slots-for-day\">\n                  { timeArrays[2].map((slot, index) => availableSlot(slot, index, props))\n                  }\n                </div>\n              </div>\n            }\n          </div>\n            \n           { (timeArrays[0].length === 0 &&\n              timeArrays[1].length === 0 &&\n              timeArrays[2].length === 0) ?\n                <div className=\"embeddable-empty-state\">\n                  <p className=\"embeddable-empty-state__title\">\n                    No available time slots\n                  </p>\n                  <p>\n                    Please select a different date in the calendar.\n                  </p>\n                  <p>\n                    You can change the month by pressing the arrow at the top right of the calendar.\n                  </p>\n                </div>\n          :\n            null\n          }\n\n          <div\n            className=\"available-slot-action\"\n          >\n            <button\n              className=\"sw-button primary-button large-button slot-confirm-button\"\n              disabled={!props.selectedSlot}\n            >\n              Confirm Date and Time\n            </button>         \n           </div>\n        </div>\n  );\n\n}\n\nexport default AvailableSlots;\n","/Users/2c4school/Development/onebody/spurwing_widget/src/utils/dateUtils.ts",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":1,"nodeType":"90","endLine":15,"endColumn":3},{"ruleId":"88","severity":1,"message":"89","line":3,"column":1,"nodeType":"90","endLine":20,"endColumn":3},{"ruleId":"88","severity":1,"message":"89","line":3,"column":1,"nodeType":"90","endLine":17,"endColumn":2},{"ruleId":"88","severity":1,"message":"89","line":3,"column":1,"nodeType":"90","endLine":17,"endColumn":3},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"95","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"95","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"95","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":22,"column":6,"nodeType":"99","endLine":22,"endColumn":57,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":22,"column":7,"nodeType":"102","endLine":22,"endColumn":56},{"ruleId":"91","severity":1,"message":"103","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":40,"column":95,"nodeType":"106","messageId":"107","endLine":40,"endColumn":97},{"ruleId":"97","severity":1,"message":"108","line":63,"column":6,"nodeType":"99","endLine":63,"endColumn":25,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.providerId', 'props.selectedAppointmentType.id', and 'props.selectedDay'. Either include them or remove the dependency array.","ArrayExpression",["112"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'parse' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'props.appointmentContactType', 'props.appointmentLocationId', 'props.providerId', 'props.providerIds', and 'props.selectedAppointmentType.id'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [props.providerId, props.selectedAppointmentType.id, props.selectedDay]",{"range":"118","text":"119"},"Update the dependencies array to be: [props.appointmentContactType, props.appointmentLocationId, props.providerId, props.providerIds, props.selectedAppointmentType.id, props.selectedDay]",{"range":"120","text":"121"},[723,774],"[props.providerId, props.selectedAppointmentType.id, props.selectedDay]",[2008,2027],"[props.appointmentContactType, props.appointmentLocationId, props.providerId, props.providerIds, props.selectedAppointmentType.id, props.selectedDay]"]